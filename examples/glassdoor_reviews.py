import requests
import time

cookies = {
    # please paste in your own cookies
}

headers = {
    # please paste in your own headers
}

for page in range(1, 20):
    data = '[{"operationName":"EIReviewsPageGraphQuery","variables":{"applyDefaultCriteria":true,"divisionId":null,"employerId":41481,"employerName":"US Customs and Border Protection","employmentStatuses":[],"fetchHighlights":false,"goc":null,"highlight":null,"jobTitle":null,"language":"eng","location":{"countryId":null,"stateId":null,"metroId":null,"cityId":null},"onlyCurrentEmployees":false,"page":'+str(page)+',"queryLocation":null,"sort":null,"worldwideFilter":false,"preferredTldId":0,"isRowProfileEnabled":false,"dynamicProfileId":-1},"query":"query EIReviewsPageGraphQuery($onlyCurrentEmployees: Boolean, $employerId: Int, $jobTitle: JobTitleIdent, $location: LocationIdent, $employmentStatuses: [EmploymentStatusEnum], $goc: GOCIdent, $highlight: HighlightTerm, $page: Int!, $sort: ReviewsSortOrderEnum, $fetchHighlights: Boolean!, $applyDefaultCriteria: Boolean, $worldwideFilter: Boolean, $language: String, $divisionId: DivisionIdent, $preferredTldId: Int, $isRowProfileEnabled: Boolean, $dynamicProfileId: Int) {\\n  domainFeatures {\\n    global: category(category: \\"global\\") {\\n      enable_multi_language_reviews: name(name: \\"enable_multi_language_reviews\\") {\\n        value: longValue\\n        __typename\\n      }\\n      ratings_article_path: name(name: \\"ratings_article_path\\") {\\n        value: stringValue\\n        __typename\\n      }\\n      __typename\\n    }\\n    covid19Sort: category(category: \\"info_site\\") {\\n      name(name: \\"include_covid_19_sort\\") {\\n        value: longValue\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  employerDivisionReviews(employer: {id: $employerId}) {\\n    employer {\\n      links {\\n        reviewsUrl\\n        __typename\\n      }\\n      __typename\\n    }\\n    employerRatings {\\n      overallRating\\n      __typename\\n    }\\n    employerReviews {\\n      divisionLink\\n      ratingOverall\\n      pros\\n      __typename\\n    }\\n    divisions {\\n      id\\n      name\\n      ratings {\\n        overallRating\\n        __typename\\n      }\\n      reviews {\\n        divisionLink\\n        featured\\n        pros\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  employerReviews(onlyCurrentEmployees: $onlyCurrentEmployees, employer: {id: $employerId}, jobTitle: $jobTitle, location: $location, goc: $goc, employmentStatuses: $employmentStatuses, highlight: $highlight, sort: $sort, page: {num: $page, size: 10}, applyDefaultCriteria: $applyDefaultCriteria, worldwideFilter: $worldwideFilter, language: $language, division: $divisionId, preferredTldId: $preferredTldId, isRowProfileEnabled: $isRowProfileEnabled, dynamicProfileId: $dynamicProfileId) {\\n    filteredReviewsCountByLang {\\n      count\\n      isoLanguage\\n      __typename\\n    }\\n    employer {\\n      id\\n      shortName\\n      ceo {\\n        id\\n        name\\n        __typename\\n      }\\n      links {\\n        jobsUrl\\n        reviewsUrl\\n        __typename\\n      }\\n      website\\n      __typename\\n    }\\n    queryLocation {\\n      id\\n      type\\n      shortName\\n      longName\\n      __typename\\n    }\\n    queryJobTitle {\\n      id\\n      text\\n      __typename\\n    }\\n    currentPage\\n    numberOfPages\\n    lastReviewDateTime\\n    allReviewsCount\\n    ratedReviewsCount\\n    filteredReviewsCount\\n    ratings {\\n      overallRating\\n      reviewCount\\n      ceoRating\\n      recommendToFriendRating\\n      cultureAndValuesRating\\n      careerOpportunitiesRating\\n      workLifeBalanceRating\\n      seniorManagementRating\\n      compensationAndBenefitsRating\\n      businessOutlookRating\\n      ceoRatingsCount\\n      ratedCeo {\\n        id\\n        name\\n        title\\n        regularPhoto: photoUrl(size: REGULAR)\\n        largePhoto: photoUrl(size: LARGE)\\n        currentBestCeoAward {\\n          displayName\\n          timePeriod\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    reviews {\\n      isLegal\\n      reviewId\\n      reviewDateTime\\n      ratingOverall\\n      ratingCeo\\n      ratingBusinessOutlook\\n      ratingWorkLifeBalance\\n      ratingCultureAndValues\\n      ratingSeniorLeadership\\n      ratingRecommendToFriend\\n      ratingCareerOpportunities\\n      ratingCompensationAndBenefits\\n      employer {\\n        id\\n        shortName\\n        regularLogoUrl: squareLogoUrl(size: REGULAR)\\n        largeLogoUrl: squareLogoUrl(size: LARGE)\\n        __typename\\n      }\\n      isCurrentJob\\n      lengthOfEmployment\\n      employmentStatus\\n      jobEndingYear\\n      jobTitle {\\n        id\\n        text\\n        __typename\\n      }\\n      location {\\n        id\\n        type\\n        name\\n        __typename\\n      }\\n      originalLanguageId\\n      pros\\n      prosOriginal\\n      cons\\n      consOriginal\\n      summary\\n      summaryOriginal\\n      advice\\n      adviceOriginal\\n      isLanguageMismatch\\n      countHelpful\\n      countNotHelpful\\n      employerResponses {\\n        id\\n        response\\n        userJobTitle\\n        responseDateTime(format: ISO)\\n        countHelpful\\n        countNotHelpful\\n        __typename\\n      }\\n      featured\\n      isCovid19\\n      divisionName\\n      divisionLink\\n      links {\\n        reviewDetailUrl\\n        __typename\\n      }\\n      topLevelDomainId\\n      languageId\\n      translationMethod\\n      __typename\\n    }\\n    __typename\\n  }\\n  reviewLocations(employer: {id: $employerId}) {\\n    countries {\\n      type\\n      id\\n      identString\\n      name\\n      containsEmployerHQ\\n      states {\\n        type\\n        id\\n        identString\\n        name\\n        containsEmployerHQ\\n        metros {\\n          type\\n          id\\n          identString\\n          name\\n          containsEmployerHQ\\n          cities(onlyIfOther: true) {\\n            type\\n            id\\n            identString\\n            name\\n            containsEmployerHQ\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  reviewHighlights(employer: {id: $employerId}, language: $language) @include(if: $fetchHighlights) {\\n    pros {\\n      id\\n      reviewCount\\n      topPhrase\\n      keyword\\n      links {\\n        highlightPhraseUrl\\n        __typename\\n      }\\n      __typename\\n    }\\n    cons {\\n      id\\n      reviewCount\\n      topPhrase\\n      keyword\\n      links {\\n        highlightPhraseUrl\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n"}]'

    response = requests.post(
        "https://www.glassdoor.com/reviews/api/graphql",
        headers=headers,
        cookies=cookies,
        data=data,
    )

    reviews = response.json()[0]["data"]["employerReviews"]["reviews"]
    for r in reviews:
        # job_title = r["jobTitle"]["text"]
        # location = r["location"]["name"]
        rating = r["ratingOverall"]
        cons = r["cons"]

        print(cons)

    time.sleep(1)
